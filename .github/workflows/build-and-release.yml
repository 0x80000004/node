name: Test and build
on:
  push:
    branches:
      - master
      - ci-migration
    tags:
      - 'v*'
  pull_request:

env:
  GOFLAGS: "-count=1"
  RELEASE_BUILD: false
  SNAPSHOT_BUILD: false
  BUILD_VERSION: ${{ github.sha }}

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Install protoc
        run: sudo apt install -y protobuf-compiler

      - name: Unit tests and linters
        run: |
          go run mage.go -v Generate
          go run mage.go -v Check
          go run mage.go -v TestWithCoverage

      - name: Upload codecov report 
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e-tests:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: E2E basic test
        run: go run mage.go -v TestE2EBasic

      - name: E2E NAT test
        run: go run mage.go -v TestE2ENAT

  build:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: production
    needs: e2e-tests

    strategy:
      max-parallel: 3
      matrix:
        platform:
          - PackageLinuxAmd64
          - PackageLinuxArm
          - PackageLinuxDebianAmd64
          - PackageLinuxDebianArm64
          - PackageLinuxDebianArm
          - PackageLinuxRaspberryImage
          - PackageMacOSAmd64
          - PackageMacOSArm64
          - PackageWindowsAmd64
          - PackageAndroid
          - PackageAndroidProvider
          - PackageDockerSwaggerRedoc

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'
      
      - name: Build package
        run: go run mage.go -v  ${{ matrix.platform }}
