name: Release
on:
  workflow_call:
  # push:
    # tags:

jobs:
  release-snapshot:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 3
      matrix:
        platform:
          - ReleaseGithubSnapshot
          # master only
          # - ReleaseGithubNightly
          - ReleaseDockerSnapshot
          - ReleaseDebianPPASnapshot

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - uses: actions/download-artifact@v4
        with:
          name: env.sh
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release snapshot
        run: |
          source env.sh
          go run mage.go -v ${{ matrix.platform }}

      - name: Release Go report
        if: github.ref == 'refs/heads/master'
        run: bin/release_goreport

  release-tag:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        platform:
          - ReleaseGithubTag
          - ReleaseDockerTag
          - ReleaseDebianPPAPreRelease
          - ReleaseAndroidSDK
          - ReleaseAndroidProviderSDK

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - uses: actions/download-artifact@v4
        with:
          name: env.sh
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release tag
        run: |
          source build/env.sh
          go run mage.go -v ${{ matrix.platform }}

  post-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - uses: actions/download-artifact@v4
        with:
          name: env.sh
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove bucket
        run: go run mage.go -v RemoveBucket
      - name: Notify UptimeRobot
        if: github.ref == 'refs/heads/master'
        run: |
          if [ "$NIGHTLY_BUILD" = "1" -o "$NIGHTLY_BUILD" = "T" -o "$NIGHTLY_BUILD" = "true" -o "$NIGHTLY_BUILD" = "True" -o "$NIGHTLY_BUILD" = "TRUE" ]; then
            curl -so /dev/null -I "$NIGHTLY_UPTIMEROBOT"
          fi
      - name: PR Avado
        run: go run mage.go -v CreateAvadoPR

